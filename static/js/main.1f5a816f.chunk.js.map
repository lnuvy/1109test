{"version":3,"sources":["Dic.js","App.js","reportWebVitals.js","index.js"],"names":["Dic","r_word","r_pos","r_seq","r_hanja","r_des","App","props","state","loading","dics","console","log","fetch","then","res","json","result","words","toString","setState","this","className","map","dic","_id","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAYeA,MAVf,YAAsD,IAAxCC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,MACzC,OACI,gCACI,6BAAKJ,IACL,6BAAKE,IACL,+BAAKD,EAAL,OAAgBE,EAAhB,OACA,4BAAIC,QCwDCC,E,kDAvDf,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAS,EACTC,KAAM,IAJS,E,qDASnB,WAAqB,IAAD,OAElBC,QAAQC,IAAI,iBACZC,MAFiB,gDAGhBC,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UACjBF,MAAM,SAAAG,GACLN,QAAQC,IAAIK,EAAS,uBACrB,IAAOC,EAASD,EAATC,MAGPP,QAAQC,IADK,CAACM,MAAO,UACJC,SAAW,mBAC5B,EAAKC,SAAS,CAACX,SAAS,EAAOC,KAAOQ,S,oBAK1C,WACE,MAA0BG,KAAKb,MAAvBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAEjB,OAAGD,EAEC,qBAAKa,UAAU,MAAf,SACE,8CAKF,8BACGZ,EAAKa,KAAI,SAAAC,GACR,OACE,cAAC,EAAD,CAEAvB,OAAQuB,EAAIvB,OACZE,MAAOqB,EAAIrB,MACXD,MAAOsB,EAAItB,MACXE,QAASoB,EAAIpB,QACbC,MAAOmB,EAAInB,OALNmB,EAAIC,c,GA1CLC,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1f5a816f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Dic({r_word, r_pos, r_seq, r_hanja, r_des}) {\r\n    return (\r\n        <div>\r\n            <h2>{r_word}</h2>\r\n            <h3>{r_seq}</h3>\r\n            <h4>{r_pos} - ({r_hanja})</h4>\r\n            <p>{r_des}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Dic;","// import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport { Component } from 'react';\nimport Dic from './Dic';\n\n\nclass App extends Component {\n  // 생성자 함수\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      dics: []\n    }\n  }\n\n  // 컴포넌트 생성될때 호출\n  componentDidMount() {\n    const BASE_URL = 'https://dictionary-f.herokuapp.com/api/words'\n    console.log('뜨니?')\n    fetch(BASE_URL)\n    .then( res => res.json())\n    .then( result => {\n      console.log(result + \"!!!!!!!!!!!!!!!!!!!\")\n      const {words} = result\n\n      const asdf = {words: \"r_word\"}\n      console.log(asdf.toString + \"!!!!!!!!!!!!!!!\")\n      this.setState({loading: false, dics : words}) // 여기\n    })\n  }\n\n\n  render() {\n    const { loading, dics } = this.state\n\n    if(loading) {\n      return (\n        <div className=\"App\">\n          <h1>Loading...</h1>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          {dics.map(dic => {\n            return (\n              <Dic\n              key={dic._id}\n              r_word={dic.r_word}\n              r_seq={dic.r_seq}\n              r_pos={dic.r_pos}\n              r_hanja={dic.r_hanja}\n              r_des={dic.r_des}>\n              </Dic>\n            )\n          })}\n        </div>\n      )\n    }\n\n\n  }\n} export default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n// count 연습\n\nclass App extends Component {\n  state = {\n    count: 0\n  }\n\n  showUI = (cnt) => {\n    let ui = null;\n    switch(cnt%4) {\n      case 0:\n        ui = <h1>11111</h1>\n        break;\n      case 1:\n        ui = <h1>22222</h1>\n        break;\n      case 2:\n        ui = <h1>33333</h1>\n        break;\n      default:        \n        ui = <h1>44444</h1> \n    }\n    console.log(cnt)\n    return ui\n  }\n  increase = () => {\n    this.setState({count: this.state.count + 1})\n  }\n\n  render() {\n    const { count } = this.state\n    return (\n      <>\n        {this.showUI(count)}\n        <button type=\"button\" onClick={this.increase}>카운팅</button>\n      </>\n    )\n  }\n}\n\n*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}